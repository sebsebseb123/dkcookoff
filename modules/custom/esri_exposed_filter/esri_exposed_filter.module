<?php
/**
 * Implements hook_form_FORM_ID_alters().
 */

function esri_form_views_exposed_form_alter( &$form, &$form_state, $form_id ) {

  /**
   * Training and events
   * Change City textarea to select.
   */

  if ($form['#id'] == 'views-exposed-form-training-and-events-list-view-page' ||
  	$form['#id'] == 'views-exposed-form-training-and-events-list-view-page-1') {

    $currentCityField = 'field_location_city_tid';
    $currentCities = $form[$currentCityField]['#options'];

    $tids = array();

    foreach ($currentCities as $city_tid => $city_name) {
		$term_results = db_query('SELECT l.entity_id AS term_entity_id FROM {field_data_field_location_city} l WHERE l.{field_location_city_tid}=:tid', array('tid' => $city_tid));

		$term_results = db_query('SELECT l.entity_id AS term_entity_id FROM field_data_field_location_city l WHERE l.field_location_city_tid=' . $city_tid );

		// Get The Terms Entity Id
		foreach ($term_results as $term_result) {
  			$tids[$city_tid] = $term_result->term_entity_id;
		}
    }

    foreach ($tids as $index_id => $entity_id) {
		$node_counts = db_query('SELECT COUNT(entity_id) AS count FROM field_data_field_training_location n WHERE n.field_training_location_nid=' . $entity_id);

		foreach ($node_counts as $node_count) {
			// No Nodes using this City
			if ($node_count->count == 0) {
				// Unset This Option
				unset($form[$currentCityField]['#options'][$index_id]);
			}
		}
	}
  }

	/* REMOVE SUB PRODUCTS */

	$subprodArray = array(
		'collateral_resources' => array(
			'id' => 'views-exposed-form-resource-collateral-resources-page',
			'terms' => array(
				'field_cr_product_tid'
			)
		),
		'maps_and_apps' => array(
			'id' => 'views-exposed-form-resource-maps-and-apps-page',
			'terms' => array(
				'field_ma_product_tid'
			)
		),
		'training_and_events' => array(
			'id' => 'views-exposed-form-training-and-events-list-view-page',
			'terms' => array(
				'field_cd_typeproduct_tid'
			)
		),
		'training_and_events' => array(
			'id' => 'views-exposed-form-training-and-events-list-view-page-1',
			'terms' => array(
				'field_cd_typeproduct_tid'
			)
		),
	);

	foreach ($subprodArray as $view_name => $content) {
		if ($form['#id'] == $content['id']) {
			foreach ($content['terms'] as $vocab_key) {
				$resetArray = reset($form[$vocab_key]['#options']);

				//Search and Remove
				if (is_object($resetArray)) {
					foreach ($form[$vocab_key]['#options'] as $objId => $objArray) {
						foreach($objArray->option as $tid => $option_label) {
							if (substr($option_label, 0, 1) == '-') {
								unset($objArray->option[$tid]);
							}
						}
					}
				}
			}
		}
	}
	if ($form['#id'] == 'views-exposed-form-training-and-events-list-view-page' ||
		$form['#id'] == 'views-exposed-form-training-and-events-list-view-page-1') {

		$fieldName = 'field_cd_typeproduct_tid';

		$resetArray = reset($form[$fieldName]['#options']);

		//Search and Remove
		if (is_object($resetArray)) {
			foreach ($form[$fieldName]['#options'] as $objId => $objArray) {
				foreach($objArray->option as $tid => $option_label) {
					if (substr($option_label, 0, 1) == '-') {
						unset($objArray->option[$tid]);
					}
				}
			}
		}
	}


	/* Date Picker Add Class */

	$dateArray = array(
		'field_cr_publication_date_value',
		'field_ma_publication_date_value',
		'field_training_start_date_value',
		'field_training_start_date_value2',
	);


	foreach ($dateArray as $dateId) {
		if (isset($form[$dateId])) {
			$form[$dateId]['#prefix'] = '<div class="form-item-date">';
			$form[$dateId]['#suffix'] = '</div>';

			$form[$dateId]['value']['#attributes'] = array(
			'readonly' => array('true')
			);
		}
	}


	/* Resource type, wrap with div*/

	$typeArray = array(
		'field_cr_type_tid',
		'field_tm_reasource_type_tid',
		'field_part_solution_type_tid',
	);

	foreach ($typeArray as $typeId) {
		if (isset($form[$typeId])) {
			$form[$typeId]['#prefix'] = '<div data-role="fieldcontain">';
			$form[$typeId]['#suffix'] = '</div>';
		}
	}


	/* APPLY TO FIND BUTTONS */

	$form['submit']['#value'] = t('Find');



	/* RESET BUTTONS */

	$resetAdd = array(
		'views-exposed-form-resource-collateral-resources-page',
		'views-exposed-form-resource-maps-and-apps-page',
		'views-exposed-form-training-and-events-list-view-page',
		'views-exposed-form-training-and-events-list-view-page-1',
		'views-exposed-form-resource-teaching-materials-page',
		'views-exposed-form-esri-partners-page',
	);

	foreach ($resetAdd as $view_name) {
		if ($form['#id'] == $view_name) {

			//Add Reset Button
			$resetButton = array(
				'#type' => 'markup',
			    '#markup' => '<input type="button" value="' . t('Reset') . '" onclick="window.location=\'' . $form['#action'] . '\';" />',
			    '#id' => 'edit-reset'
			    );

			$form['reset'] = $resetButton;
		}
	}



	/* TRANSLATION FIXES */

	$filterFix = array(
		//Fix Translation for Collateral Resources
		'collateral_resources' => array(
			'id' => 'views-exposed-form-resource-collateral-resources-page',
			'terms' => array(
				'field_cr_type_tid',
				'field_cr_industry_tid',
				'field_cr_product_tid',
				'field_cr_services_tid',
			),
		),
		'teaching_materials' => array(
			'id' => 'views-exposed-form-resource-teaching-materials-page',
			'terms' => array(
				'field_tm_resource_type_tid',
				'field_tm_subject_area_tid',
				'field_tm_geographic_focus_tid',
				'field_tm_grade_tid',
				'field_tm_platform_education_tid',
			),
		),
		'maps_apps' => array(
			'id' => 'views-exposed-form-resource-maps-and-apps-page',
			'terms' => array(
				'field_ma_industry_tid',
				'field_ma_product_tid',
			),
		),
		'training_events' => array(
			'id' => 'views-exposed-form-training-and-events-list-view-page',
			'terms' => array(
				'field_training_type_tid',
				'field_location_city_tid',
				'field_training_delivery_language_tid',
				'field_cd_typeindustry_tid',
				'field_training_delivery_language_tid',
				'field_cd_typeproduct_tid',
			),
		),
		'training_events_preset' => array(
			'id' => 'views-exposed-form-training-and-events-list-view-page-1',
			'terms' => array(
				'field_training_type_tid',
				'field_location_city_tid',
				'field_training_delivery_language_tid',
				'field_cd_typeindustry_tid',
				'field_training_delivery_language_tid',
				'field_cd_typeproduct_tid',
			),
		),
		'esri_partners' => array(
			'id' => 'views-exposed-form-esri-partners-page',
			'terms' => array(
				'field_part_solution_type_tid',
				'field_part_services_tid',
				'field_part_industry_tid',
				'field_part_program_tier_value',
			),
		),
	);

	foreach ($filterFix as $view_name => $content) {
		if ($form['#id'] == $content['id']) {
			$taxonomy_select_boxes = $content['terms'];

			// running over the <select> elements as defined in the $taxonomy_select_boxes array above
			foreach( $taxonomy_select_boxes as $vocab_key ) {
				$resetArray = reset($form[$vocab_key]['#options']);

				//There Are Sub Terms
				if (is_object($resetArray)) {
					foreach ($form[$vocab_key]['#options'] as $objId => $objArray) {
						foreach( $objArray->option as $tid => $option_label ) {

							// update the label of the current option by retrieving its translation using the i18n api
							$objArray->option[$tid] = i18n_string_translate('taxonomy:term:' . $tid . ':name', $option_label);
						}
					}
				//No Subterms
				} else {
					// iterate over the current <select> element's options
					foreach( $form[$vocab_key]['#options'] as $tid => $option_label ) {

						// update the label of the current option by retrieving its translation using the i18n api
						$form[$vocab_key]['#options'][$tid] = i18n_string_translate('taxonomy:term:' . $tid . ':name', $option_label);
					}
				}
			}
		}
	}



	/* FIX MULTISELECT MENUS FOR JQUERY MOBILE */

	$jqueryFix = array(
		//Fix Translation for Collateral Resources
		'collateral_resources' => array(
			'id' => 'views-exposed-form-resource-collateral-resources-page',
			'terms' => array(
				'field_cr_type_tid',
				'field_cr_industry_tid',
				'field_cr_product_tid',
				'field_cr_services_tid',
			),
		),
		'teaching_materials' => array(
			'id' => 'views-exposed-form-resource-teaching-materials-page',
			'terms' => array(
				'field_tm_resource_type_tid',
				'field_tm_subject_area_tid',
				'field_tm_geographic_focus_tid',
				'field_tm_grade_tid',
				'field_tm_platform_education_tid',
			),
		),
		'maps_apps' => array(
			'id' => 'views-exposed-form-resource-maps-and-apps-page',
			'terms' => array(
				'field_ma_industry_tid',
				'field_ma_product_tid',
			),
		),
		'training_events' => array(
			'id' => 'views-exposed-form-training-and-events-list-view-page',
			'terms' => array(
				'field_training_type_tid',
				'field_location_city_tid',
				'field_training_delivery_language_tid',
				'field_cd_typeindustry_tid',
				'field_training_delivery_language_tid',
				'field_cd_typeproduct_tid',
			),
		),
		'training_events_preset' => array(
			'id' => 'views-exposed-form-training-and-events-list-view-page-1',
			'terms' => array(
				'field_training_type_tid',
				'field_location_city_tid',
				'field_training_delivery_language_tid',
				'field_cd_typeindustry_tid',
				'field_training_delivery_language_tid',
				'field_cd_typeproduct_tid',
			),
		),
		'esri_partners' => array(
			'id' => 'views-exposed-form-esri-partners-page',
			'terms' => array(
				'field_part_solution_type_tid',
				'field_part_services_tid',
				'field_part_industry_tid',
				'field_part_program_tier_value',
			),
		),
	);

	foreach ($jqueryFix as $view_name => $content) {
		if ($form['#id'] == $content['id']) {
			foreach ($content['terms'] as $vocab_key) {
				$form[$vocab_key]['#attributes'] = array(
					'data-native-menu' => array('false'),
					);
			}
		}
	}



	/* FIX MULTISELECT MENUS FOR JQUERY MOBILE */


	if (isset($form['sort_by'])) {
		$sortValue = array(
			'sort_by',
			'sort_order',
		);

		foreach ($sortValue as $vocab_key) {
			$form[$vocab_key]['#attributes'] = array(
				'data-native-menu' => array('false'),
			);
		}
	}



	/* SORT AND ORDER NAME */

	if (isset($form['sort_by'])) {
		foreach ($form['sort_by']['#options'] as $optionId => $optionValue) {
			$form['sort_by']['#options'][$optionId] = t('Sort') . ': ' . $optionValue;
		}
	}

	if (isset($form['sort_order'])) {
		foreach ($form['sort_order']['#options'] as $optionId => $optionValue) {
			$form['sort_order']['#options'][$optionId] = t('Order') . ': ' . $optionValue;
		}
	}

}
