<?php
/**
 * @file
 * Install, update and uninstall functions for the Esri Canada install profile.
 */

/**
 * Implements hook_install().
 *
 * Performs actions to set up the site for this profile.
 *
 * @see system_install()
 */
function dkcookoff_install() {
  // Enable some standard blocks.
  $default_theme = 'esri';
  $admin_theme = 'rubik';

  variable_set('theme_default', $default_theme);

  $values = array(
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'user',
      'delta' => 'login',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'sidebar_first',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'navigation',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'sidebar_first',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'management',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 1,
      'region' => 'sidebar_first',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'help',
      'pages' => '',
      'cache' => -1,
    ),
  );
  $query = db_insert('block')->fields(array('module', 'delta', 'theme', 'status', 'weight', 'region', 'pages', 'cache'));
  foreach ($values as $record) {
    $query->values($record);
  }
  $query->execute();

  //Remove Bartik
  $query = db_update('system')->fields(array(
    'status' => 0
    ))
    ->condition('type', 'theme')
    ->condition('name', 'bartik');

  $query->execute();

  // Allow visitor account creation, but with administrative approval.
  variable_set('user_register', USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL);

  // Enable default permissions for system roles.
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content'));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content'));

  // Execute all module updates
  $sandbox = array();
  for ($i = 10000; $i < 10099; $i++){
    $func = 'dkcookoff_update_'.$i;
    if (function_exists($func)){
      $func($sandbox);
    }
  }
}

/**
 * Implements hook_update_N().
 *   Enables Admin Menu module.
 */
function dkcookoff_update_10000(&$sandbox) {
  module_enable(array('admin_menu'));
  drupal_flush_all_caches();
  module_enable(array('admin_menu_toolbar'));
  return t('The admin_menu module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables ESRI and Rubik.
 */
function dkcookoff_update_10001(&$sandbox) {

  theme_enable(array('esri'));

  variable_set('theme_default', 'esri');

  variable_set('admin_theme', 'rubik');
  variable_set('node_admin_theme', '1');

  //Blocks
  module_enable(array('esri_theme_config'));

  return t('The admin and default themes have been set.');
}

/**
 * Implements hook_update_N().
 *   Enables Module Filter
 */
function dkcookoff_update_10002(&$sandbox) {
  module_enable(array('module_filter'));
  return t('The module filter module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Views + Ctools via Views Php.
 */
function dkcookoff_update_10003(&$sandbox) {
  module_enable(array('views_php'));
  drupal_flush_all_caches();
  return t('The views php, views, and ctool module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Better Exposed Filter
 */
function dkcookoff_update_10004(&$sandbox) {
  module_enable(array('better_exposed_filters'));
  return t('The better exposed filter module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Views UI
 */
function dkcookoff_update_10005(&$sandbox) {
  module_enable(array('views_ui'));
  return t('The views ui module has been enabled.');
}


/**
 * Implements hook_update_N().
 *   Enables Entity
 */
function dkcookoff_update_10006(&$sandbox) {
  module_enable(array('entitytokens'));
  module_enable(array('entityreference'));
  module_enable(array('entity_translation_upgrade'));
  drupal_flush_all_caches();
  return t('The entity module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Date
 */
function dkcookoff_update_10007(&$sandbox) {
  module_enable(array('date'));
  module_enable(array('date_popup'));
  module_enable(array('date_views'));
  drupal_flush_all_caches();
  return t('The date module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Features
 */
function dkcookoff_update_10008(&$sandbox) {
  module_enable(array('features_override'));
  module_enable(array('strongarm'));
  return t('The features module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Path Auto
 */
function dkcookoff_update_10009(&$sandbox) {
  module_enable(array('pathauto'));
  return t('The path auto module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Page Title
 */
function dkcookoff_update_10010(&$sandbox) {
  module_enable(array('page_title'));
  return t('The path auto module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Search
 */
function dkcookoff_update_10011(&$sandbox) {
  module_enable(array('search_config'));
  return t('The search module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables SmartCrop
 */
function dkcookoff_update_10012(&$sandbox) {
  module_enable(array('smartcrop'));
  return t('The smartcrop module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Scheduler
 */
function dkcookoff_update_10013(&$sandbox) {
  module_enable(array('scheduler'));
  return t('The scheduler module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables References
 */
function dkcookoff_update_10014(&$sandbox) {
  module_enable(array('link'));
  module_enable(array('references'));
  return t('The references module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Variable
 */
function dkcookoff_update_10015(&$sandbox) {
  module_enable(array('variable_admin'));
  module_enable(array('variable_realm'));
  module_enable(array('variable_store'));
  drupal_flush_all_caches();
  return t('The variable translation module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Field Group
 */
function dkcookoff_update_10016(&$sandbox) {
  module_enable(array(
    'field_group',
    'field_ui',
    'title'
  ));

  return t('The fieldgroup module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Google Analytics
 */
function dkcookoff_update_10017(&$sandbox) {
  //Google Analytics hook moved down to 56
}

/**
 * Implements hook_update_N().
 *   Enables Media Browser
 */
function dkcookoff_update_10018(&$sandbox) {
  module_enable(array('media_browser_plus'));
  return t('The media browser plus module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Menu
 */
function dkcookoff_update_10019(&$sandbox) {
  module_enable(array('menu_block'));
  return t('The menu module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Multi Block
 */
function dkcookoff_update_10020(&$sandbox) {
  module_enable(array('multiblock'));
  return t('The multiblock module has been enabled.');
}


/**
 * Implements hook_update_N().
 *   Enables Webform
 */
function dkcookoff_update_10021(&$sandbox) {
  module_enable(array('webform'));
  return t('The webform module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables WYSIWYG
 */
function dkcookoff_update_10022(&$sandbox) {
  module_enable(array('wysiwyg'));
  return t('The wysiwyg module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables WorkBench
 */
function dkcookoff_update_10023(&$sandbox) {
  module_enable(array('workbench'));
  return t('The workbench module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Internationalization
 */
function dkcookoff_update_10024(&$sandbox) {
  module_enable(array('i18n'));
  module_enable(array('i18n_taxonomy'));
  module_enable(array('i18n_block'));
  module_enable(array('i18n_field'));
  module_enable(array('i18n_menu'));
  module_enable(array('i18n_node'));
  module_enable(array('i18n_path'));
  module_enable(array('i18n_select'));
  module_enable(array('i18n_variable'));
  drupal_flush_all_caches();

  return t('The internationalization module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Esri Languages
 */

function dkcookoff_update_10025(&$sandbox) {
  module_enable(array('esri_languages'));
  drupal_flush_all_caches();
  return t('The Esri languages module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Esri Menus
 */

function dkcookoff_update_10026(&$sandbox) {
  module_enable(array('esri_menus'));

  $values = array(
    array(
      'module' => 'menu',
      'delta'  => 'menu-primary-navigation',
      'language' => 'en',
    ),
    array(
      'module' => 'menu',
      'delta'  => 'menu-primary-navigation-fr',
      'language' => 'fr',
    ),
  );

  foreach ($values as $i => $value) {
    // Check for existing.
    $result = db_select('block', 'b')
      ->fields('b')
      ->condition('module', $value['module'], '=')
      ->condition('delta', $value['delta'], '=')
      ->execute()
      ->fetchAssoc();
    // If there's nothing there, remove it from being shown.
    if (!empty($result['delta'])) {
      unset($values[$i]);
    }
  }

  foreach ($values as $record) {
    $query = db_insert('i18n_block_language')->fields(array('module', 'delta', 'language'));
    $query->values($record);
    $query->execute();
  }

  //Insert Multi Block
  $query = db_insert('multiblock')->fields(array(
      'title', 'module', 'orig_delta'
    ));
  $query->values(array(
      'Primary Navigation (Responsive)',
      'menu',
      'menu-primary-navigation'
    ));
  $query->execute();

  //French Multiblock Installed In Later Hook

  return t('The Esri menus module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Acquia Connector
 */

function dkcookoff_update_10027(&$sandbox) {
  module_enable(array('acquia_connector'));
  drupal_flush_all_caches();
  return t('The Acquia Connector module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Node Reference
 */

function dkcookoff_update_10028(&$sandbox) {
  module_enable(array('node_reference'));
  return t('The Node Reference module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Footer Feature Feature
 */

function dkcookoff_update_10029(&$sandbox) {
  module_enable(array('esri_footer_features'));
  drupal_flush_all_caches();
  return t('The Footer Feature module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Back Up and Migrate
 */

function dkcookoff_update_10030(&$sandbox) {
  module_enable(array('backup_migrate'));
  return t('The Backup and migrate module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Link Checker
 */

function dkcookoff_update_10031(&$sandbox) {
  module_enable(array('linkchecker'));
  return t('The Link Checker module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Boolean
 */

function dkcookoff_update_10032(&$sandbox) {
  module_enable(array('boolean'));
  return t('The boolean module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Resources Collateral
 */

function dkcookoff_update_10033(&$sandbox) {
  module_enable(array('resource_collateral_resources'));
  drupal_flush_all_caches();
  return t('The resources collateral features has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Esri Exposed Filter
 */

function dkcookoff_update_10034(&$sandbox) {
  module_enable(array('esri_exposed_filter'));
  drupal_flush_all_caches();
  return t('The Esri exposed Filter has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Jquery Update
 */

function dkcookoff_update_10035(&$sandbox) {
  module_enable(array('jquery_update'));
  variable_set('jquery_update_compression_type', 'min');
  variable_set('jquery_update_jquery_cdn', 'none');
  variable_set('jquery_update_jquery_version', '1.7');
  drupal_flush_all_caches();
  return t('The Esri exposed Filter has been enabled.');
}

/**
 *   Enables Image Field Focus
 */

function dkcookoff_update_10036(&$sandbox) {
  module_enable(array('imagefield_focus'));
  return t('The Image Field Focus has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Resources Maps and Apps
 */

function dkcookoff_update_10037(&$sandbox) {
  module_enable(array('resource_maps_and_apps'));
  drupal_flush_all_caches();
  return t('The resources maps and apps has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Resources Maps and Apps
 */

function dkcookoff_update_10038(&$sandbox) {
  module_enable(array('redirect'));
  drupal_flush_all_caches();
  return t('The redirect module has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables Panels
 */

function dkcookoff_update_10039(&$sandbox) {
  module_enable(array('panels'));
  return t('Enable the panels module.');
}

/**
 * Implements hook_update_N().
 *   Enables  wysiwyg Template
 */

function dkcookoff_update_10040(&$sandbox) {
  module_enable(array('wysiwyg_template'));
  return t('Enable the wysiwyg Template module.');
}

/**
 * Implements hook_update_N().
 *   Enables  views_content
 */

function dkcookoff_update_10041(&$sandbox) {
  module_enable(array('views_content'));
  return t('Enable the views_content module.');
}

/**
 *   Enable the Teaching Materials feature.
 */

function dkcookoff_update_10042(&$sandbox) {
  module_enable(array('resource_teaching_materials'));
  return t('Enable the Teaching Materials feature.');
}

/**
 *   Add Primary Navigation French in Responsive Multiblock
 */

function dkcookoff_update_10043(&$sandbox) {

  //Insert Multi Block
  $query = db_insert('multiblock')->fields(array(
      'title', 'module', 'orig_delta'
    ));
  $query->values(array(
      'Primary Navigation FR (Responsive)',
      'menu',
      'menu-primary-navigation-fr'
    ));
  $query->execute();

  return t('The French responsive menu has been enabled.');
}

/**
 * Implements hook_update_N().
 *   Enables  phone
 */

function dkcookoff_update_10044(&$sandbox) {
  module_enable(array('phone'));
  return t('Enable the phone module.');
}


/**
 * Implements hook_update_N().
 *   Enables  webform_phone
 */

function dkcookoff_update_10045(&$sandbox) {
  module_enable(array('webform_phone'));
  return t('Enable the webform_phone module.');
}

/**
 * Implements hook_update_N().
 *   Enables  uuid
 */

function dkcookoff_update_10046(&$sandbox) {
  module_enable(array('uuid'));
  return t('Enable the uuid module.');
}

/**
 * Implements hook_update_N().
 *   Enables  node_export
 */

function dkcookoff_update_10047(&$sandbox) {
  module_enable(array('node_export'));
  return t('Enable the node_export module.');
}

/**
 * Implements hook_update_N().
 *   Enables  node_export_features
 */

function dkcookoff_update_10048(&$sandbox) {
  module_enable(array('node_export_features'));
  return t('Enable the node_export_features module.');
}

/**
 * Implements hook_update_N().
 *   Enables  esri_webform_export
 */

function dkcookoff_update_10049(&$sandbox) {
  //Disabled - was used for demo purpose
  //module_enable(array('esri_webform_export'));
  //drupal_flush_all_caches();
  return t('The esri_webform_export feature has been enabled.');
}

/**
 *   Enable the Training features.
 */

function dkcookoff_update_10050(&$sandbox) {
  module_enable(array('training_and_events_list_view', 'training_content_types'));
  return t('Enable the Training features.');
}

/**
 *   Upping the jpg conversion quality.
 */

function dkcookoff_update_10051(&$sandbox) {
  variable_set('image_jpeg_quality', 100);
  return t('Upping the jpg conversion quality.');
}

/**
 *   Enable Events Content Type
 */

function dkcookoff_update_10052(&$sandbox) {
  module_enable(array('events_content_type'));
  return t('Events enabled');
}

/**
 *   Enable Esri Homepage Feature
 */

function dkcookoff_update_10053(&$sandbox) {
  module_enable(array('esri_homepage'));

  drupal_flush_all_caches();
  return t('Esri Homepage enabled');
}

/**
 *   Enable Share this module
 */

function dkcookoff_update_10054(&$sandbox) {
  // Enable content types to show sharethis block.
  $node_type_array = node_type_get_types();
  $node_type_options = array();
  foreach ($node_type_array as $k => $v) {
    $node_type_options[$k] = $v->type;
  }
  $a_node_types_allowed = implode(',', $node_type_options);

  // Publisher id
  $a_publisher_id = '80062c80-8a79-445a-b6d4-c7b476c58c56';

  // Enable sharethis module
  module_enable(array('sharethis'));

  // Setup sharethis options
  variable_set('sharethis_widget_option','st_direct');
  variable_set('sharethis_button_option','stbc_hcount');
  variable_set('sharethis_button_option','stbc_hcount');
  variable_set('sharethis_service_option','"Tweet:twitter","Facebook:facebook","LinkedIn:linkedin","Email:email"');
  variable_set('sharethis_node_option', $a_node_types_allowed);
  variable_set('sharethis_teaser_option', 0);
  variable_set('sharethis_publisherID', $a_publisher_id);
  variable_set('sharethis_location', 'block');

  // Setup sharethis block
  $values = array(
    array(
      'module' => 'sharethis',
      'delta' => 'sharethis_block',
      'theme' => 'esri',
      'status' => 1,
      'weight' => -18,
      'region' => 'sharethis',
      'pages' => '',
      'cache' => -1,
    ),
  );

  // Unset any block elements that are present in the database already
  foreach ($values as $position => $record) {
    $result = db_select('block', 'b')
      ->fields('b')
      ->condition('module', $record['module'], '=')
      ->condition('delta', $record['delta'], '=')
      ->condition('theme', 'esri', '=')
      ->execute()
      ->fetchAssoc();
    if (!empty($result['bid'])) {
      unset($values[$position]);
    }
  }

  $query = db_insert('block')->fields(array('module', 'delta', 'theme', 'status', 'weight', 'region', 'pages', 'cache'));
  foreach ($values as $record) {
    $query->values($record);
  }
  $query->execute();

  // Clear all cache
  drupal_flush_all_caches();

  return t('Sharethis module enabled and configured');
}

/**
 *   Enable Generic Pages Feature
 */

function dkcookoff_update_10055(&$sandbox) {
  module_enable(array('esri_generic_pages'));
  return t('Generic Pages enabled');
}

/**
 *   Enable Esri Related Collateral Resouces Feature
 */

function dkcookoff_update_10056(&$sandbox) {
  module_enable(array('esri_related_collateral_resources'));

  drupal_flush_all_caches();
  return t('Esri Related Collateral Resouces enabled');
}

/**
 *   Enable PHP Filter
 */

function dkcookoff_update_10057(&$sandbox) {
  module_enable(array('php'), FALSE);
  return t('PHP Filter enabled');
}

/**
 *   Enables Google Analytics
 */

function dkcookoff_update_10058(&$sandbox) {
  module_enable(array('googleanalytics'), FALSE);

  // set google analytics account based on acquia hosting env.

  switch ($_ENV['AH_SITE_ENVIRONMENT']) {
   case 'dev':
     $a_ga_account = 'UA-34778225-1';
     break;
   case 'test':
    $a_ga_account = 'UA-34778225-1';
     break;
   case 'prod':
     $a_ga_account = 'UA-34778225-1';
     break;
   default:
     $a_ga_account = 'UA-34778225-1';
  }

  variable_set('googleanalytics_account',$a_ga_account);
  return t('The google analytics module has been enabled.');
}

/**
 *   Enables Attachment Links module
 */

function dkcookoff_update_10059(&$sandbox) {
  module_enable(array('attachment_links'), FALSE);
  drupal_flush_all_caches();
  return t('The Attachment Links module has been enabled.');
}

/**
 *   Enables filemanager module
 */

function dkcookoff_update_10060(&$sandbox) {
  module_enable(array('filemanager'), FALSE);
  return t('The MCFileManager module has been enabled.');
}

/**
 *   Enables Training - Course Catalog
 */

function dkcookoff_update_10061(&$sandbox) {
  module_enable(array('training_course_catalog'), FALSE);
  return t('Training - Course Catalog module has been enabled.');
}

/**
 *   Enables Esri Partners feature
 */

function dkcookoff_update_10062(&$sandbox) {
  module_enable(array('esri_partners'), FALSE);
  return t('Esri Partners feature enabled.');
}
